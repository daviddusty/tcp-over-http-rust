name: Release
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-release:
    name: build-release
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        build:
          - linux musl x64
        include:
          - build: linux musl x64
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: ${{ matrix.target }}
        
      # Workaround for <https://github.com/actions/virtual-environments/issues/2557>
      - name: Switch Xcode SDK
        if: runner.os == 'macos'
        run: |
          cat <<EOF >> "$GITHUB_ENV"
          SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
          EOF

      - name: Build release binary
        run: cargo install --locked --git https://github.com/julianbuettner/tcp-over-http --tag rocket-stable

      # this breaks on aarch64 and this if conditional isn't working for some reason: TODO: investigate
      #- name: Strip release binary
      #  if: runner.target != 'aarch64-unknown-linux-musl' && runner.target != 'aarch64-apple-darwin'
      #  run: strip "target/${{ matrix.target }}/release/zellij"

      - name: Tar release
        id: make-artifact
        working-directory: ./target/${{ matrix.target }}/release
        run: |
          name="zellij-${{ matrix.target }}.tar.gz"
          tar cvzf "${name}" "zellij"
          echo "::set-output name=name::${name}"

      - name: Upload release archive
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }} 
          asset_path: ./target/${{ matrix.target }}/release/${{ steps.make-artifact.outputs.name }}
          asset_name: zellij-${{matrix.target}}.tar.gz
          asset_content_type: application/octet-stream

  create-release:
    runs-on: ubuntu-latest
    outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: create_release 
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && '' || github.ref }}
          release_name: Release ${{ github.event_name == 'workflow_dispatch' && 'main' || github.ref }}
          draft: ${{ github.event_name == 'workflow_dispatch' }}
          prerelease: false  
